---
import TableHead from "../../../global/table/TableHead.astro";
import TableRow from "../../../global/table/TableRow.astro";
import CollaboratorEditButton from "./CollaboratorEditButton.astro";
import CollaboratorDeleteButton from "./CollaboratorDeleteButton.astro";
import Pagination from "../../../global/Pagination.astro";
import type { CollaboratorsTableData } from "../../../../pages/admin/_db/types";
import type { TableLabel } from "../../../global/table/types";

type Props = {
  collaborators: CollaboratorsTableData[];
};

const { collaborators } = Astro.props;

const columns = ["Nombre", "Email", "Rol", "Tel√©fono", "Acciones"];

const rowData = collaborators.reduce(
  (acc: Record<string, (string | TableLabel | null)[]>, collaborator) => {
    const { id, name, email, role, phone } = collaborator;
    acc[id] = [name, email, role, phone];
    return acc;
  },
  {}
);
---

<div class="container">
  <table>
    <TableHead columnsNames={columns} />
    <tbody>
      {
        collaborators.map((collaborator) => (
          <TableRow rowData={rowData[collaborator.id]}>
            <div class="action-button">
              <CollaboratorEditButton {collaborator} />
              <CollaboratorDeleteButton {collaborator} />
            </div>
          </TableRow>
        ))
      }
    </tbody>
  </table>
  <Pagination currentPage={1} totalPages={2} />
</div>

<style>
  table {
    --main-color: #2b9398;
    width: 100%;
    border-collapse: collapse;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 1.5rem;
  }

  .action-button {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
  }

  @media only screen and (max-width: 768px) {
    .container {
      overflow-x: auto;
    }
  }
</style>
