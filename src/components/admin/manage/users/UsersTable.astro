---
import TableHead from "../../../global/table/TableHead.astro";
import TableRow from "../../../global/table/TableRow.astro";
import UserEditButton from "./UserEditButton.astro";
import UserDeleteButton from "./UserDeleteButton.astro";
import Pagination from "../../../global/Pagination.astro";
import type { UsersTableData } from "../../../../pages/admin/_db/types";
import type { TableLabel } from "../../../global/table/types";

type Props = {
  users: UsersTableData[];
};

const { users } = Astro.props;

const columns = ["Nombre", "Email", "Tel√©fono", "Acciones"];
const rowData = users.reduce(
  (acc: Record<string, (string | TableLabel | null)[]>, user) => {
    const { id, name, email, phone } = user;
    acc[id] = [name, email, phone];
    return acc;
  },
  {}
);

const noResults = users.length === 0;
---

<div class="container">
  <table>
    <TableHead columnsNames={columns} />
    <tbody>
      {
        noResults ? (
          <tr>
            <td colspan="5" style="text-align: center;">
              No hay resultados
            </td>
          </tr>
        ) : (
          users.map((user) => (
            <TableRow rowData={rowData[user.id]}>
              <div class="action-button">
                <UserEditButton {user} />
                <UserDeleteButton {user} />
              </div>
            </TableRow>
          ))
        )
      }
    </tbody>
  </table>
  <Pagination currentPage={1} totalPages={2} />
</div>

<style>
  table {
    --main-color: #2b9398;
    width: 100%;
    border-collapse: collapse;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 1.5rem;
  }

  td {
    padding: 0.5rem 0;
  }

  .action-button {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: center;
  }

  @media only screen and (max-width: 768px) {
    .container {
      overflow-x: auto;
    }
  }
</style>
